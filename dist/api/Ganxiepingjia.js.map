{"version":3,"sources":["../../src/api/Ganxiepingjia.js"],"names":["config","db","api","get","req","res","page","parseInt","query","limit","sort","order","where","pingjiabianhao","indexOf","Op","like","eq","pingjianeirong","xuniliwu","pingjiashijian","yonghuzhanghao","tableName","session","userinfo","undefined","jwt","decode","headers","token","username","userid","GanxiepingjiaModel","findAndCountAll","offset","result","currPage","pageSize","toRes","post","Object","keys","body","forEach","item","create","update","id","destroy","in","all","findOne","params","record","sql","type","remindstart","columnName","remindend","remindStart","util","getDateTimeFormat","Number","remindEnd","sequelize","plain","raw","QueryTypes","SELECT","results","count","xColumnName","yColumnName","timeStatType","role","dbConnection","dbtype","toLowerCase"],"mappings":"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","file":"Ganxiepingjia.js","sourcesContent":["import { version } from '../../package.json'\r\nimport { Router } from 'express'\r\nimport { Sequelize, Op, QueryTypes } from 'sequelize'\r\nimport sequelize from '../models/sequelize'\r\nimport toRes from '../lib/toRes'\r\nimport GanxiepingjiaModel from '../models/GanxiepingjiaModel'\r\nimport md5 from 'md5-node'\r\nimport util from '../lib/util'\r\nimport jwt from 'jsonwebtoken'\r\nimport moment from 'moment'\r\nimport ConfigModel from '../models/ConfigModel'\r\nimport https from 'https'\r\nimport request from 'request'\r\nimport qs from 'querystring'\r\nimport path from 'path'\r\nimport fs from 'fs'\r\n\r\n\r\n\r\n\r\nexport default ({ config, db }) => {\r\n\tlet api = Router()\r\n\r\n\r\n\t// 分页接口（后端）\r\n\tapi.get('/page', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet pingjiabianhao = req.query.pingjiabianhao\r\n\t\t\tif (pingjiabianhao) {\r\n\r\n\t\t\t\tif (pingjiabianhao.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.pingjiabianhao = {\r\n\t\t\t\t\t\t[Op.like]: pingjiabianhao\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.pingjiabianhao = {\r\n\t\t\t\t\t\t[Op.eq]: pingjiabianhao\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet pingjianeirong = req.query.pingjianeirong\r\n\t\t\tif (pingjianeirong) {\r\n\r\n\t\t\t\tif (pingjianeirong.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.pingjianeirong = {\r\n\t\t\t\t\t\t[Op.like]: pingjianeirong\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.pingjianeirong = {\r\n\t\t\t\t\t\t[Op.eq]: pingjianeirong\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet xuniliwu = req.query.xuniliwu\r\n\t\t\tif (xuniliwu) {\r\n\r\n\t\t\t\tif (xuniliwu.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.xuniliwu = {\r\n\t\t\t\t\t\t[Op.like]: xuniliwu\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.xuniliwu = {\r\n\t\t\t\t\t\t[Op.eq]: xuniliwu\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet pingjiashijian = req.query.pingjiashijian\r\n\t\t\tif (pingjiashijian) {\r\n\r\n\t\t\t\tif (pingjiashijian.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.pingjiashijian = {\r\n\t\t\t\t\t\t[Op.like]: pingjiashijian\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.pingjiashijian = {\r\n\t\t\t\t\t\t[Op.eq]: pingjiashijian\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet yonghuzhanghao = req.query.yonghuzhanghao\r\n\t\t\tif (yonghuzhanghao) {\r\n\r\n\t\t\t\tif (yonghuzhanghao.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.yonghuzhanghao = {\r\n\t\t\t\t\t\t[Op.like]: yonghuzhanghao\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.yonghuzhanghao = {\r\n\t\t\t\t\t\t[Op.eq]: yonghuzhanghao\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// let tableName = req.session.userinfo.tableName\r\n\t\t\tlet tableName = req.session.userinfo === undefined ? jwt.decode(req.headers.token).tableName : req.session.userinfo.tableName\r\n\t\t\tif(tableName == 'yonghu') {\r\n\t\t\t\twhere.yonghuzhanghao = {\r\n\t\t\t\t\t[Op.eq]: req.session.userinfo === undefined ? jwt.decode(req.headers.token).username : req.session.userinfo.yonghuzhanghao\r\n\t\t\t\t}\r\n\t\t\t\tif (where['userid'] != undefined) {\r\n\t\t\t\t\tdelete where.userid\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet result = await GanxiepingjiaModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 分页接口（前端）\r\n\tapi.get('/list', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet pingjiabianhao = req.query.pingjiabianhao\r\n\t\t\tif (pingjiabianhao) {\r\n\r\n\t\t\t\tif (pingjiabianhao.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.pingjiabianhao = {\r\n\t\t\t\t\t\t[Op.like]: pingjiabianhao\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.pingjiabianhao = {\r\n\t\t\t\t\t\t[Op.eq]: pingjiabianhao\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet result = await GanxiepingjiaModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 401, '您的权限不够！', '', 200)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\t// 保存接口（后端）\r\n\tapi.post('/save', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\r\n\r\n\t\t\tconst userinfo = await GanxiepingjiaModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 保存接口（前端）\r\n\tapi.post('/add', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\t\t\tif (jwt.decode(req.headers.token) == null) {\r\n\t\t\t\ttoRes.session(res, 401, '请登录后再操作', '', 401)\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\tconst userinfo = await GanxiepingjiaModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 更新接口\r\n\tapi.post('/update', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\r\n\t\t\tawait GanxiepingjiaModel.update(req.body, {\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: req.body.id || 0\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\ttoRes.session(res, 0, '编辑成功！')\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 删除接口\r\n\tapi.post('/delete', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tawait GanxiepingjiaModel.destroy({\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: {\r\n\t\t\t\t\t[Op.in]: req.body\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.session(res, 0, '删除成功！')\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 详情接口（后端）\r\n\tapi.all('/info/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\t\t\ttoRes.record(res, 0, await GanxiepingjiaModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 详情接口（前端）\r\n\tapi.all('/detail/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\t\t\ttoRes.record(res, 0, await GanxiepingjiaModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 获取需要提醒的记录数接口\r\n\tapi.get('/remind/:columnName/:type', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = 'SELECT 0 AS count'\r\n\t\t\t\r\n\t\t\tif (req.params.type == 1) {\r\n\t\t\t\tif (req.query.remindstart) sql = \"SELECT COUNT(*) AS count FROM ganxiepingjia WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"'\"\r\n\t\t\t\tif (req.query.remindend) sql = \"SELECT COUNT(*) AS count FROM ganxiepingjia WHERE \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM ganxiepingjia WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"' AND \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (req.params.type == 2) {\r\n\t\t\t\tif (req.query.remindstart) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM ganxiepingjia WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"'\"\r\n\t\t\t\t}\r\n\t\t\t\tif (req.query.remindend) {\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM ganxiepingjia WHERE \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM ganxiepingjia WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"' AND \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst results = await sequelize.query(sql, {\r\n\t\t\t\tplain: true,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.count(res, 0, results.count)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t// 分组统计接口\r\n\tapi.get('/group/:columnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet columnName = req.params.columnName\r\n\t\t\t// let tableName = \"ganxiepingjia\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tlet tableName = req.session.userinfo === undefined ? jwt.decode(req.headers.token).tableName : req.session.userinfo.tableName\r\n\t\t\tif(tableName == 'yonghu') {\r\n\t\t\t\twhere += \" AND yonghuzhanghao = '\" + jwt.decode(req.headers.token).username + \"' \";\r\n\t\t\t}\r\n\t\t\tsql = \"SELECT COUNT(*) AS total, \" + columnName + \" FROM ganxiepingjia \" + where + \" GROUP BY \" + columnName + \" LIMIT 10\" \r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 统计指定字段\r\n\tapi.get('/value/:xColumnName/:yColumnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\t// let tableName = \"ganxiepingjia\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tlet tableName = req.session.userinfo === undefined ? jwt.decode(req.headers.token).tableName : req.session.userinfo.tableName\r\n\t\t\tif(tableName == 'yonghu') {\r\n\t\t\t\twhere += \" AND yonghuzhanghao = '\" + jwt.decode(req.headers.token).username + \"' \";\r\n\t\t\t}\r\n\t\t\tif (\"ganxiepingjia\" == \"orders\") {\r\n\t\t\t\twhere += \" AND status IN ('已支付', '已发货', '已完成') \";\r\n\t\t\t}\r\n\r\n\t\t\tsql = \"SELECT \" + xColumnName + \", SUM(\" + yColumnName + \") AS total FROM ganxiepingjia \" + where + \" GROUP BY \" + xColumnName + \" DESC LIMIT 10\"\r\n\t\t\t\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 按日期统计\r\n\tapi.get('/value/:xColumnName/:yColumnName/:timeStatType', async (req, res) => {\r\n\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\tlet timeStatType = req.params.timeStatType\r\n\t\t\tlet tableName = \"ganxiepingjia\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tif (jwt.decode(req.headers.token).role != '管理员') {\r\n\t\t\t\twhere += \" AND yonghuzhanghao = '\" + jwt.decode(req.headers.token).username + \"' \";\r\n\t\t\t}\r\n\t\t\tif (\"ganxiepingjia\" == \"orders\") {\r\n\t\t\t\twhere += \" AND status IN ('已支付', '已发货', '已完成') \";\r\n\t\t\t}\r\n\r\n            if (config.dbConnection.dbtype.toLowerCase() == \"mysql\") {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m')  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y')  LIMIT 10\";\r\n            } else {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120)  LIMIT 10\";\r\n            }\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn api\r\n}\r\n"]}