{"version":3,"sources":["../../src/api/Yonghu.js"],"names":["config","db","api","all","req","res","pwd","query","password","YonghuModel","findOne","where","yonghuzhanghao","username","mima","userinfo","toRes","session","token","jwt","sign","id","dataValues","role","loginUserColumn","tableName","jwtSecret","expiresIn","destroy","post","Object","keys","body","forEach","item","create","undefined","decode","headers","record","update","get","page","parseInt","limit","sort","order","indexOf","Op","like","eq","yonghuxingming","xingbie","touxiang","shoujihaoma","youxiang","shenfenzhenghao","findAndCountAll","offset","result","currPage","pageSize","in","params","sql","type","remindstart","columnName","remindend","remindStart","util","getDateTimeFormat","Number","remindEnd","sequelize","plain","raw","QueryTypes","SELECT","results","count","xColumnName","yColumnName","timeStatType","dbConnection","dbtype","toLowerCase"],"mappings":"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","file":"Yonghu.js","sourcesContent":["import { version } from '../../package.json'\r\nimport { Router } from 'express'\r\nimport { Sequelize, Op, QueryTypes } from 'sequelize'\r\nimport sequelize from '../models/sequelize'\r\nimport toRes from '../lib/toRes'\r\nimport YonghuModel from '../models/YonghuModel'\r\nimport md5 from 'md5-node'\r\nimport util from '../lib/util'\r\nimport jwt from 'jsonwebtoken'\r\nimport moment from 'moment'\r\nimport ConfigModel from '../models/ConfigModel'\r\nimport https from 'https'\r\nimport request from 'request'\r\nimport qs from 'querystring'\r\nimport path from 'path'\r\nimport fs from 'fs'\r\n\r\n\r\n\r\n\r\nexport default ({ config, db }) => {\r\n\tlet api = Router()\r\n\r\n\t// 用户登录接口\r\n\tapi.all('/login', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet pwd = req.query.password\r\n\t\t\tlet userinfo = await YonghuModel.findOne({ where: { yonghuzhanghao: req.query.username, mima: pwd } })\r\n\t\t\tif (userinfo === null) {\r\n\t\t\t\ttoRes.session(res, -1, '用户名或密码错误！')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst token = jwt.sign(\r\n\t\t\t\t{\r\n\t\t\t\t\tid: userinfo.dataValues.id,\r\n\t\t\t\t\tusername: userinfo.dataValues.yonghuzhanghao,\r\n\t\t\t\t\trole: '用户',\r\n                    loginUserColumn: 'yonghuzhanghao',\r\n                    tableName: 'yonghu'\r\n\t\t\t\t},\r\n\t\t\t\tconfig.jwtSecret,\r\n\t\t\t\t{\r\n\t\t\t\t\texpiresIn: 60 * 60 * 24 * 1\r\n\t\t\t\t}\r\n\t\t\t)\r\n\r\n\t\t\tuserinfo.dataValues.token = token\r\n\t\t\tuserinfo.dataValues.role = '用户'\r\n\t\t\tuserinfo.dataValues.loginUserColumn = 'yonghuzhanghao'\r\n\t\t\tuserinfo.dataValues.tableName = 'yonghu'\r\n\t\t\tdelete userinfo.dataValues.mima\r\n\t\t\treq.session.userinfo = userinfo\r\n\r\n\t\t\ttoRes.session(res, 0, '登录成功！', token)\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\t// 用户退出接口\r\n\tapi.all('/logout', (req, res) => {\r\n\t\t\r\n\t\treq.session.destroy(err => {\r\n\t\t\ttoRes.session(res, 0, '退出成功！')\r\n\t\t})\r\n\t})\r\n\r\n\t// 注册接口\r\n\tapi.post('/register', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\r\n\r\n\t\t\tconst userinfo = await YonghuModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\r\n\t\t\t\ttoRes.session(res, -1, '注册失败！')\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttoRes.session(res, 0, '注册成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, -2, '请检查是否正确输入或用户名重复！', '', 200)\r\n\t\t}\r\n\t})\r\n\r\n\t// 获取session接口\r\n\tapi.all('/session', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\ttoRes.record(res, 0, await YonghuModel.findOne({ where: { id: req.session.userinfo === undefined ? jwt.decode(req.headers.token).id : req.session.userinfo.id } }))\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 忘记密码（找回密码）\r\n\tapi.all('/resetPass', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n    \tlet pwd = '123456'\r\n\r\n\t\t\tawait YonghuModel.update({\r\n\t\t\t\tmima: pwd\r\n\t\t\t}, {\r\n\t\t\t\twhere: {\r\n\t\t\t\t  yonghuzhanghao: req.query.username\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.session(res, 0, '密码已重置为：123456')\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 分页接口（后端）\r\n\tapi.get('/page', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet yonghuzhanghao = req.query.yonghuzhanghao\r\n\t\t\tif (yonghuzhanghao) {\r\n\r\n\t\t\t\tif (yonghuzhanghao.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.yonghuzhanghao = {\r\n\t\t\t\t\t\t[Op.like]: yonghuzhanghao\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.yonghuzhanghao = {\r\n\t\t\t\t\t\t[Op.eq]: yonghuzhanghao\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet yonghuxingming = req.query.yonghuxingming\r\n\t\t\tif (yonghuxingming) {\r\n\r\n\t\t\t\tif (yonghuxingming.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.yonghuxingming = {\r\n\t\t\t\t\t\t[Op.like]: yonghuxingming\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.yonghuxingming = {\r\n\t\t\t\t\t\t[Op.eq]: yonghuxingming\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet mima = req.query.mima\r\n\t\t\tif (mima) {\r\n\r\n\t\t\t\tif (mima.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.mima = {\r\n\t\t\t\t\t\t[Op.like]: mima\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.mima = {\r\n\t\t\t\t\t\t[Op.eq]: mima\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet xingbie = req.query.xingbie\r\n\t\t\tif (xingbie) {\r\n\r\n\t\t\t\tif (xingbie.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.xingbie = {\r\n\t\t\t\t\t\t[Op.like]: xingbie\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.xingbie = {\r\n\t\t\t\t\t\t[Op.eq]: xingbie\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet touxiang = req.query.touxiang\r\n\t\t\tif (touxiang) {\r\n\r\n\t\t\t\tif (touxiang.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.touxiang = {\r\n\t\t\t\t\t\t[Op.like]: touxiang\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.touxiang = {\r\n\t\t\t\t\t\t[Op.eq]: touxiang\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet shoujihaoma = req.query.shoujihaoma\r\n\t\t\tif (shoujihaoma) {\r\n\r\n\t\t\t\tif (shoujihaoma.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.shoujihaoma = {\r\n\t\t\t\t\t\t[Op.like]: shoujihaoma\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.shoujihaoma = {\r\n\t\t\t\t\t\t[Op.eq]: shoujihaoma\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet youxiang = req.query.youxiang\r\n\t\t\tif (youxiang) {\r\n\r\n\t\t\t\tif (youxiang.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.youxiang = {\r\n\t\t\t\t\t\t[Op.like]: youxiang\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.youxiang = {\r\n\t\t\t\t\t\t[Op.eq]: youxiang\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet shenfenzhenghao = req.query.shenfenzhenghao\r\n\t\t\tif (shenfenzhenghao) {\r\n\r\n\t\t\t\tif (shenfenzhenghao.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.shenfenzhenghao = {\r\n\t\t\t\t\t\t[Op.like]: shenfenzhenghao\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.shenfenzhenghao = {\r\n\t\t\t\t\t\t[Op.eq]: shenfenzhenghao\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet result = await YonghuModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 分页接口（前端）\r\n\tapi.get('/list', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet yonghuzhanghao = req.query.yonghuzhanghao\r\n\t\t\tif (yonghuzhanghao) {\r\n\r\n\t\t\t\tif (yonghuzhanghao.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.yonghuzhanghao = {\r\n\t\t\t\t\t\t[Op.like]: yonghuzhanghao\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.yonghuzhanghao = {\r\n\t\t\t\t\t\t[Op.eq]: yonghuzhanghao\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet result = await YonghuModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 401, '您的权限不够！', '', 200)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\t// 保存接口（后端）\r\n\tapi.post('/save', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\r\n\r\n\t\t\tconst userinfo = await YonghuModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 保存接口（前端）\r\n\tapi.post('/add', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\t\t\tif (jwt.decode(req.headers.token) == null) {\r\n\t\t\t\ttoRes.session(res, 401, '请登录后再操作', '', 401)\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\tconst userinfo = await YonghuModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 更新接口\r\n\tapi.post('/update', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\r\n\t\t\tawait YonghuModel.update(req.body, {\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: req.body.id || 0\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\ttoRes.session(res, 0, '编辑成功！')\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 删除接口\r\n\tapi.post('/delete', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tawait YonghuModel.destroy({\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: {\r\n\t\t\t\t\t[Op.in]: req.body\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.session(res, 0, '删除成功！')\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 详情接口（后端）\r\n\tapi.all('/info/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\t\t\ttoRes.record(res, 0, await YonghuModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 详情接口（前端）\r\n\tapi.all('/detail/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\t\t\ttoRes.record(res, 0, await YonghuModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 获取需要提醒的记录数接口\r\n\tapi.get('/remind/:columnName/:type', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = 'SELECT 0 AS count'\r\n\t\t\t\r\n\t\t\tif (req.params.type == 1) {\r\n\t\t\t\tif (req.query.remindstart) sql = \"SELECT COUNT(*) AS count FROM yonghu WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"'\"\r\n\t\t\t\tif (req.query.remindend) sql = \"SELECT COUNT(*) AS count FROM yonghu WHERE \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM yonghu WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"' AND \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (req.params.type == 2) {\r\n\t\t\t\tif (req.query.remindstart) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM yonghu WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"'\"\r\n\t\t\t\t}\r\n\t\t\t\tif (req.query.remindend) {\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM yonghu WHERE \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM yonghu WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"' AND \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst results = await sequelize.query(sql, {\r\n\t\t\t\tplain: true,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.count(res, 0, results.count)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t// 分组统计接口\r\n\tapi.get('/group/:columnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet columnName = req.params.columnName\r\n\t\t\t// let tableName = \"yonghu\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tsql = \"SELECT COUNT(*) AS total, \" + columnName + \" FROM yonghu \" + where + \" GROUP BY \" + columnName + \" LIMIT 10\" \r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 统计指定字段\r\n\tapi.get('/value/:xColumnName/:yColumnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\t// let tableName = \"yonghu\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tif (\"yonghu\" == \"orders\") {\r\n\t\t\t\twhere += \" AND status IN ('已支付', '已发货', '已完成') \";\r\n\t\t\t}\r\n\r\n\t\t\tsql = \"SELECT \" + xColumnName + \", SUM(\" + yColumnName + \") AS total FROM yonghu \" + where + \" GROUP BY \" + xColumnName + \" DESC LIMIT 10\"\r\n\t\t\t\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 按日期统计\r\n\tapi.get('/value/:xColumnName/:yColumnName/:timeStatType', async (req, res) => {\r\n\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\tlet timeStatType = req.params.timeStatType\r\n\t\t\tlet tableName = \"yonghu\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tif (\"yonghu\" == \"orders\") {\r\n\t\t\t\twhere += \" AND status IN ('已支付', '已发货', '已完成') \";\r\n\t\t\t}\r\n\r\n            if (config.dbConnection.dbtype.toLowerCase() == \"mysql\") {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m')  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y')  LIMIT 10\";\r\n            } else {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120)  LIMIT 10\";\r\n            }\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn api\r\n}\r\n"]}