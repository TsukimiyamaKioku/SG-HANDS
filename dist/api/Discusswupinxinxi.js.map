{"version":3,"sources":["../../src/api/Discusswupinxinxi.js"],"names":["config","db","api","get","req","res","page","parseInt","query","limit","sort","order","where","refid","indexOf","Op","like","eq","userid","avatarurl","nickname","content","reply","DiscusswupinxinxiModel","findAndCountAll","offset","result","currPage","pageSize","toRes","session","post","Object","keys","body","forEach","item","userinfo","undefined","jwt","decode","headers","token","id","create","update","destroy","in","all","findOne","params","record","sql","type","remindstart","columnName","remindend","remindStart","util","getDateTimeFormat","Number","remindEnd","sequelize","plain","raw","QueryTypes","SELECT","results","count","xColumnName","yColumnName","timeStatType","tableName","dbConnection","dbtype","toLowerCase"],"mappings":"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","file":"Discusswupinxinxi.js","sourcesContent":["import { version } from '../../package.json'\r\nimport { Router } from 'express'\r\nimport { Sequelize, Op, QueryTypes } from 'sequelize'\r\nimport sequelize from '../models/sequelize'\r\nimport toRes from '../lib/toRes'\r\nimport DiscusswupinxinxiModel from '../models/DiscusswupinxinxiModel'\r\nimport md5 from 'md5-node'\r\nimport util from '../lib/util'\r\nimport jwt from 'jsonwebtoken'\r\nimport moment from 'moment'\r\nimport ConfigModel from '../models/ConfigModel'\r\nimport https from 'https'\r\nimport request from 'request'\r\nimport qs from 'querystring'\r\nimport path from 'path'\r\nimport fs from 'fs'\r\n\r\n\r\n\r\n\r\nexport default ({ config, db }) => {\r\n\tlet api = Router()\r\n\r\n\r\n\t// 分页接口（后端）\r\n\tapi.get('/page', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet refid = req.query.refid\r\n\t\t\tif (refid) {\r\n\r\n\t\t\t\tif (refid.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.refid = {\r\n\t\t\t\t\t\t[Op.like]: refid\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.refid = {\r\n\t\t\t\t\t\t[Op.eq]: refid\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet userid = req.query.userid\r\n\t\t\tif (userid) {\r\n\r\n\t\t\t\tif (userid.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.userid = {\r\n\t\t\t\t\t\t[Op.like]: userid\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.userid = {\r\n\t\t\t\t\t\t[Op.eq]: userid\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet avatarurl = req.query.avatarurl\r\n\t\t\tif (avatarurl) {\r\n\r\n\t\t\t\tif (avatarurl.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.avatarurl = {\r\n\t\t\t\t\t\t[Op.like]: avatarurl\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.avatarurl = {\r\n\t\t\t\t\t\t[Op.eq]: avatarurl\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet nickname = req.query.nickname\r\n\t\t\tif (nickname) {\r\n\r\n\t\t\t\tif (nickname.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.nickname = {\r\n\t\t\t\t\t\t[Op.like]: nickname\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.nickname = {\r\n\t\t\t\t\t\t[Op.eq]: nickname\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet content = req.query.content\r\n\t\t\tif (content) {\r\n\r\n\t\t\t\tif (content.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.content = {\r\n\t\t\t\t\t\t[Op.like]: content\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.content = {\r\n\t\t\t\t\t\t[Op.eq]: content\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet reply = req.query.reply\r\n\t\t\tif (reply) {\r\n\r\n\t\t\t\tif (reply.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.reply = {\r\n\t\t\t\t\t\t[Op.like]: reply\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.reply = {\r\n\t\t\t\t\t\t[Op.eq]: reply\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet result = await DiscusswupinxinxiModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 分页接口（前端）\r\n\tapi.get('/list', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet refid = req.query.refid\r\n\t\t\tif (refid) {\r\n\t\t\t\twhere.refid = {\r\n\t\t\t\t\t[Op.eq]: refid\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet nickname = req.query.nickname\r\n\t\t\tif (nickname) {\r\n\r\n\t\t\t\tif (nickname.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.nickname = {\r\n\t\t\t\t\t\t[Op.like]: nickname\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.nickname = {\r\n\t\t\t\t\t\t[Op.eq]: nickname\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet content = req.query.content\r\n\t\t\tif (content) {\r\n\r\n\t\t\t\tif (content.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.content = {\r\n\t\t\t\t\t\t[Op.like]: content\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.content = {\r\n\t\t\t\t\t\t[Op.eq]: content\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet result = await DiscusswupinxinxiModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 401, '您的权限不够！', '', 200)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\t// 保存接口（后端）\r\n\tapi.post('/save', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\t\t\tif (!req.body.userid) {\r\n\t\t\t\treq.body.userid = req.session.userinfo === undefined ? jwt.decode(req.headers.token).id : req.session.userinfo.id\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst userinfo = await DiscusswupinxinxiModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 保存接口（前端）\r\n\tapi.post('/add', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\t\t\tif (jwt.decode(req.headers.token) == null) {\r\n\t\t\t\ttoRes.session(res, 401, '请登录后再操作', '', 401)\r\n\t\t\t}\r\n\r\n\t\t\treq.body.userid = req.session.userinfo === undefined ? jwt.decode(req.headers.token).id : req.session.userinfo.id\r\n\r\n\r\n\t\t\tconst userinfo = await DiscusswupinxinxiModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 更新接口\r\n\tapi.post('/update', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\r\n\t\t\tawait DiscusswupinxinxiModel.update(req.body, {\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: req.body.id || 0\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\ttoRes.session(res, 0, '编辑成功！')\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 删除接口\r\n\tapi.post('/delete', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tawait DiscusswupinxinxiModel.destroy({\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: {\r\n\t\t\t\t\t[Op.in]: req.body\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.session(res, 0, '删除成功！')\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 详情接口（后端）\r\n\tapi.all('/info/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\t\t\ttoRes.record(res, 0, await DiscusswupinxinxiModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 详情接口（前端）\r\n\tapi.all('/detail/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\t\t\ttoRes.record(res, 0, await DiscusswupinxinxiModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 获取需要提醒的记录数接口\r\n\tapi.get('/remind/:columnName/:type', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = 'SELECT 0 AS count'\r\n\t\t\t\r\n\t\t\tif (req.params.type == 1) {\r\n\t\t\t\tif (req.query.remindstart) sql = \"SELECT COUNT(*) AS count FROM discusswupinxinxi WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"'\"\r\n\t\t\t\tif (req.query.remindend) sql = \"SELECT COUNT(*) AS count FROM discusswupinxinxi WHERE \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM discusswupinxinxi WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"' AND \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (req.params.type == 2) {\r\n\t\t\t\tif (req.query.remindstart) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM discusswupinxinxi WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"'\"\r\n\t\t\t\t}\r\n\t\t\t\tif (req.query.remindend) {\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM discusswupinxinxi WHERE \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM discusswupinxinxi WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"' AND \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst results = await sequelize.query(sql, {\r\n\t\t\t\tplain: true,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.count(res, 0, results.count)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t// 分组统计接口\r\n\tapi.get('/group/:columnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet columnName = req.params.columnName\r\n\t\t\t// let tableName = \"discusswupinxinxi\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tsql = \"SELECT COUNT(*) AS total, \" + columnName + \" FROM discusswupinxinxi \" + where + \" GROUP BY \" + columnName + \" LIMIT 10\" \r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 统计指定字段\r\n\tapi.get('/value/:xColumnName/:yColumnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\t// let tableName = \"discusswupinxinxi\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tif (\"discusswupinxinxi\" == \"orders\") {\r\n\t\t\t\twhere += \" AND status IN ('已支付', '已发货', '已完成') \";\r\n\t\t\t}\r\n\r\n\t\t\tsql = \"SELECT \" + xColumnName + \", SUM(\" + yColumnName + \") AS total FROM discusswupinxinxi \" + where + \" GROUP BY \" + xColumnName + \" DESC LIMIT 10\"\r\n\t\t\t\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 按日期统计\r\n\tapi.get('/value/:xColumnName/:yColumnName/:timeStatType', async (req, res) => {\r\n\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\tlet timeStatType = req.params.timeStatType\r\n\t\t\tlet tableName = \"discusswupinxinxi\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tif (\"discusswupinxinxi\" == \"orders\") {\r\n\t\t\t\twhere += \" AND status IN ('已支付', '已发货', '已完成') \";\r\n\t\t\t}\r\n\r\n            if (config.dbConnection.dbtype.toLowerCase() == \"mysql\") {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m')  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y')  LIMIT 10\";\r\n            } else {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120)  LIMIT 10\";\r\n            }\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn api\r\n}\r\n"]}