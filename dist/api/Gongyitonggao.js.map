{"version":3,"sources":["../../src/api/Gongyitonggao.js"],"names":["config","db","api","get","req","res","page","parseInt","query","limit","sort","order","where","gongyibiaoti","indexOf","Op","like","eq","fengmian","jianjie","gonggaoneirong","fabushijian","clicktime","clicknum","GongyitonggaoModel","findAndCountAll","offset","result","currPage","pageSize","toRes","session","post","Object","keys","body","forEach","item","Date","now","format","create","userinfo","jwt","decode","headers","token","update","id","destroy","in","all","params","findOne","recordInfo","increment","record","sql","type","remindstart","columnName","remindend","remindStart","util","getDateTimeFormat","Number","remindEnd","sequelize","plain","raw","QueryTypes","SELECT","results","count","xColumnName","yColumnName","timeStatType","tableName","dbConnection","dbtype","toLowerCase"],"mappings":"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","file":"Gongyitonggao.js","sourcesContent":["import { version } from '../../package.json'\r\nimport { Router } from 'express'\r\nimport { Sequelize, Op, QueryTypes } from 'sequelize'\r\nimport sequelize from '../models/sequelize'\r\nimport toRes from '../lib/toRes'\r\nimport GongyitonggaoModel from '../models/GongyitonggaoModel'\r\nimport md5 from 'md5-node'\r\nimport util from '../lib/util'\r\nimport jwt from 'jsonwebtoken'\r\nimport moment from 'moment'\r\nimport ConfigModel from '../models/ConfigModel'\r\nimport https from 'https'\r\nimport request from 'request'\r\nimport qs from 'querystring'\r\nimport path from 'path'\r\nimport fs from 'fs'\r\n\r\n\r\n\r\n\r\nexport default ({ config, db }) => {\r\n\tlet api = Router()\r\n\r\n\r\n\t// 分页接口（后端）\r\n\tapi.get('/page', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet gongyibiaoti = req.query.gongyibiaoti\r\n\t\t\tif (gongyibiaoti) {\r\n\r\n\t\t\t\tif (gongyibiaoti.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.gongyibiaoti = {\r\n\t\t\t\t\t\t[Op.like]: gongyibiaoti\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.gongyibiaoti = {\r\n\t\t\t\t\t\t[Op.eq]: gongyibiaoti\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet fengmian = req.query.fengmian\r\n\t\t\tif (fengmian) {\r\n\r\n\t\t\t\tif (fengmian.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.fengmian = {\r\n\t\t\t\t\t\t[Op.like]: fengmian\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.fengmian = {\r\n\t\t\t\t\t\t[Op.eq]: fengmian\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet jianjie = req.query.jianjie\r\n\t\t\tif (jianjie) {\r\n\r\n\t\t\t\tif (jianjie.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.jianjie = {\r\n\t\t\t\t\t\t[Op.like]: jianjie\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.jianjie = {\r\n\t\t\t\t\t\t[Op.eq]: jianjie\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet gonggaoneirong = req.query.gonggaoneirong\r\n\t\t\tif (gonggaoneirong) {\r\n\r\n\t\t\t\tif (gonggaoneirong.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.gonggaoneirong = {\r\n\t\t\t\t\t\t[Op.like]: gonggaoneirong\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.gonggaoneirong = {\r\n\t\t\t\t\t\t[Op.eq]: gonggaoneirong\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet fabushijian = req.query.fabushijian\r\n\t\t\tif (fabushijian) {\r\n\r\n\t\t\t\tif (fabushijian.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.fabushijian = {\r\n\t\t\t\t\t\t[Op.like]: fabushijian\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.fabushijian = {\r\n\t\t\t\t\t\t[Op.eq]: fabushijian\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet clicktime = req.query.clicktime\r\n\t\t\tif (clicktime) {\r\n\r\n\t\t\t\tif (clicktime.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.clicktime = {\r\n\t\t\t\t\t\t[Op.like]: clicktime\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.clicktime = {\r\n\t\t\t\t\t\t[Op.eq]: clicktime\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet clicknum = req.query.clicknum\r\n\t\t\tif (clicknum) {\r\n\r\n\t\t\t\tif (clicknum.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.clicknum = {\r\n\t\t\t\t\t\t[Op.like]: clicknum\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.clicknum = {\r\n\t\t\t\t\t\t[Op.eq]: clicknum\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet result = await GongyitonggaoModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 分页接口（前端）\r\n\tapi.get('/list', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet gongyibiaoti = req.query.gongyibiaoti\r\n\t\t\tif (gongyibiaoti) {\r\n\r\n\t\t\t\tif (gongyibiaoti.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.gongyibiaoti = {\r\n\t\t\t\t\t\t[Op.like]: gongyibiaoti\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.gongyibiaoti = {\r\n\t\t\t\t\t\t[Op.eq]: gongyibiaoti\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet result = await GongyitonggaoModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 401, '您的权限不够！', '', 200)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\t// 保存接口（后端）\r\n\tapi.post('/save', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\t\t\treq.body.clicktime = moment(Date.now()).format('YYYY-MM-DD HH:mm:ss')\r\n\r\n\r\n\t\t\tconst userinfo = await GongyitonggaoModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 保存接口（前端）\r\n\tapi.post('/add', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\t\t\tif (jwt.decode(req.headers.token) == null) {\r\n\t\t\t\ttoRes.session(res, 401, '请登录后再操作', '', 401)\r\n\t\t\t}\r\n\r\n\t\t\treq.body.clicktime = moment(Date.now()).format('YYYY-MM-DD HH:mm:ss')\r\n\r\n\r\n\t\t\tconst userinfo = await GongyitonggaoModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 更新接口\r\n\tapi.post('/update', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\r\n\t\t\tawait GongyitonggaoModel.update(req.body, {\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: req.body.id || 0\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\ttoRes.session(res, 0, '编辑成功！')\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 删除接口\r\n\tapi.post('/delete', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tawait GongyitonggaoModel.destroy({\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: {\r\n\t\t\t\t\t[Op.in]: req.body\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.session(res, 0, '删除成功！')\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 详情接口（后端）\r\n\tapi.all('/info/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n            await GongyitonggaoModel.update({\r\n\t\t\t\tclicktime: moment(Date.now()).format('YYYY-MM-DD HH:mm:ss')\r\n\t\t\t}, {\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: req.params.id\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tconst recordInfo = await GongyitonggaoModel.findOne({ where: { id: req.params.id } })\r\n            await recordInfo.increment('clicknum')\r\n\r\n\t\t\ttoRes.record(res, 0, await GongyitonggaoModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 详情接口（前端）\r\n\tapi.all('/detail/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n            await GongyitonggaoModel.update({\r\n\t\t\t\tclicktime: moment(Date.now()).format('YYYY-MM-DD HH:mm:ss')\r\n\t\t\t}, {\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: req.params.id\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tconst recordInfo = await GongyitonggaoModel.findOne({ where: { id: req.params.id } })\r\n            await recordInfo.increment('clicknum')\r\n\r\n\t\t\ttoRes.record(res, 0, await GongyitonggaoModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 获取需要提醒的记录数接口\r\n\tapi.get('/remind/:columnName/:type', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = 'SELECT 0 AS count'\r\n\t\t\t\r\n\t\t\tif (req.params.type == 1) {\r\n\t\t\t\tif (req.query.remindstart) sql = \"SELECT COUNT(*) AS count FROM gongyitonggao WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"'\"\r\n\t\t\t\tif (req.query.remindend) sql = \"SELECT COUNT(*) AS count FROM gongyitonggao WHERE \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM gongyitonggao WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"' AND \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (req.params.type == 2) {\r\n\t\t\t\tif (req.query.remindstart) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM gongyitonggao WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"'\"\r\n\t\t\t\t}\r\n\t\t\t\tif (req.query.remindend) {\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM gongyitonggao WHERE \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM gongyitonggao WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"' AND \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst results = await sequelize.query(sql, {\r\n\t\t\t\tplain: true,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.count(res, 0, results.count)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\r\n\t// 智能推荐接口\r\n\tapi.get('/autoSort', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 5\r\n\t\t\tlet sort = req.query.sort || 'clicktime'\r\n\t\t\tlet order = req.query.order || 'desc'\r\n\r\n            sort = \"clicknum\"\r\n\r\n\t\t\tlet result = await GongyitonggaoModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t// 分组统计接口\r\n\tapi.get('/group/:columnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet columnName = req.params.columnName\r\n\t\t\t// let tableName = \"gongyitonggao\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tsql = \"SELECT COUNT(*) AS total, \" + columnName + \" FROM gongyitonggao \" + where + \" GROUP BY \" + columnName + \" LIMIT 10\" \r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 统计指定字段\r\n\tapi.get('/value/:xColumnName/:yColumnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\t// let tableName = \"gongyitonggao\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tif (\"gongyitonggao\" == \"orders\") {\r\n\t\t\t\twhere += \" AND status IN ('已支付', '已发货', '已完成') \";\r\n\t\t\t}\r\n\r\n\t\t\tsql = \"SELECT \" + xColumnName + \", SUM(\" + yColumnName + \") AS total FROM gongyitonggao \" + where + \" GROUP BY \" + xColumnName + \" DESC LIMIT 10\"\r\n\t\t\t\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 按日期统计\r\n\tapi.get('/value/:xColumnName/:yColumnName/:timeStatType', async (req, res) => {\r\n\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\tlet timeStatType = req.params.timeStatType\r\n\t\t\tlet tableName = \"gongyitonggao\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tif (\"gongyitonggao\" == \"orders\") {\r\n\t\t\t\twhere += \" AND status IN ('已支付', '已发货', '已完成') \";\r\n\t\t\t}\r\n\r\n            if (config.dbConnection.dbtype.toLowerCase() == \"mysql\") {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m')  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y')  LIMIT 10\";\r\n            } else {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120)  LIMIT 10\";\r\n            }\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn api\r\n}\r\n"]}