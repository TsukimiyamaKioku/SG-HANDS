{"version":3,"sources":["../../src/api/Jiaoyixinxi.js"],"names":["config","db","api","get","req","res","page","parseInt","query","limit","sort","order","where","jiaoyibianhao","indexOf","Op","like","eq","wupinmingcheng","wupinleixing","wupintupian","jiage","shuliang","zongjiage","jiaoyishijian","yonghuzhanghao","yonghuxingming","ispay","tableName","session","userinfo","undefined","jwt","decode","headers","token","username","userid","JiaoyixinxiModel","findAndCountAll","offset","result","currPage","pageSize","toRes","post","Object","keys","body","forEach","item","create","update","id","destroy","in","all","findOne","params","record","sql","type","remindstart","columnName","remindend","remindStart","util","getDateTimeFormat","Number","remindEnd","sequelize","plain","raw","QueryTypes","SELECT","results","count","xColumnName","yColumnName","timeStatType","role","dbConnection","dbtype","toLowerCase"],"mappings":"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","file":"Jiaoyixinxi.js","sourcesContent":["import { version } from '../../package.json'\r\nimport { Router } from 'express'\r\nimport { Sequelize, Op, QueryTypes } from 'sequelize'\r\nimport sequelize from '../models/sequelize'\r\nimport toRes from '../lib/toRes'\r\nimport JiaoyixinxiModel from '../models/JiaoyixinxiModel'\r\nimport md5 from 'md5-node'\r\nimport util from '../lib/util'\r\nimport jwt from 'jsonwebtoken'\r\nimport moment from 'moment'\r\nimport ConfigModel from '../models/ConfigModel'\r\nimport https from 'https'\r\nimport request from 'request'\r\nimport qs from 'querystring'\r\nimport path from 'path'\r\nimport fs from 'fs'\r\n\r\n\r\n\r\n\r\nexport default ({ config, db }) => {\r\n\tlet api = Router()\r\n\r\n\r\n\t// 分页接口（后端）\r\n\tapi.get('/page', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet jiaoyibianhao = req.query.jiaoyibianhao\r\n\t\t\tif (jiaoyibianhao) {\r\n\r\n\t\t\t\tif (jiaoyibianhao.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.jiaoyibianhao = {\r\n\t\t\t\t\t\t[Op.like]: jiaoyibianhao\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.jiaoyibianhao = {\r\n\t\t\t\t\t\t[Op.eq]: jiaoyibianhao\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet wupinmingcheng = req.query.wupinmingcheng\r\n\t\t\tif (wupinmingcheng) {\r\n\r\n\t\t\t\tif (wupinmingcheng.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.wupinmingcheng = {\r\n\t\t\t\t\t\t[Op.like]: wupinmingcheng\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.wupinmingcheng = {\r\n\t\t\t\t\t\t[Op.eq]: wupinmingcheng\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet wupinleixing = req.query.wupinleixing\r\n\t\t\tif (wupinleixing) {\r\n\r\n\t\t\t\tif (wupinleixing.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.wupinleixing = {\r\n\t\t\t\t\t\t[Op.like]: wupinleixing\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.wupinleixing = {\r\n\t\t\t\t\t\t[Op.eq]: wupinleixing\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet wupintupian = req.query.wupintupian\r\n\t\t\tif (wupintupian) {\r\n\r\n\t\t\t\tif (wupintupian.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.wupintupian = {\r\n\t\t\t\t\t\t[Op.like]: wupintupian\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.wupintupian = {\r\n\t\t\t\t\t\t[Op.eq]: wupintupian\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet jiage = req.query.jiage\r\n\t\t\tif (jiage) {\r\n\r\n\t\t\t\tif (jiage.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.jiage = {\r\n\t\t\t\t\t\t[Op.like]: jiage\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.jiage = {\r\n\t\t\t\t\t\t[Op.eq]: jiage\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet shuliang = req.query.shuliang\r\n\t\t\tif (shuliang) {\r\n\r\n\t\t\t\tif (shuliang.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.shuliang = {\r\n\t\t\t\t\t\t[Op.like]: shuliang\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.shuliang = {\r\n\t\t\t\t\t\t[Op.eq]: shuliang\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet zongjiage = req.query.zongjiage\r\n\t\t\tif (zongjiage) {\r\n\r\n\t\t\t\tif (zongjiage.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.zongjiage = {\r\n\t\t\t\t\t\t[Op.like]: zongjiage\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.zongjiage = {\r\n\t\t\t\t\t\t[Op.eq]: zongjiage\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet jiaoyishijian = req.query.jiaoyishijian\r\n\t\t\tif (jiaoyishijian) {\r\n\r\n\t\t\t\tif (jiaoyishijian.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.jiaoyishijian = {\r\n\t\t\t\t\t\t[Op.like]: jiaoyishijian\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.jiaoyishijian = {\r\n\t\t\t\t\t\t[Op.eq]: jiaoyishijian\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet yonghuzhanghao = req.query.yonghuzhanghao\r\n\t\t\tif (yonghuzhanghao) {\r\n\r\n\t\t\t\tif (yonghuzhanghao.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.yonghuzhanghao = {\r\n\t\t\t\t\t\t[Op.like]: yonghuzhanghao\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.yonghuzhanghao = {\r\n\t\t\t\t\t\t[Op.eq]: yonghuzhanghao\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet yonghuxingming = req.query.yonghuxingming\r\n\t\t\tif (yonghuxingming) {\r\n\r\n\t\t\t\tif (yonghuxingming.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.yonghuxingming = {\r\n\t\t\t\t\t\t[Op.like]: yonghuxingming\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.yonghuxingming = {\r\n\t\t\t\t\t\t[Op.eq]: yonghuxingming\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet ispay = req.query.ispay\r\n\t\t\tif (ispay) {\r\n\r\n\t\t\t\tif (ispay.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.ispay = {\r\n\t\t\t\t\t\t[Op.like]: ispay\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.ispay = {\r\n\t\t\t\t\t\t[Op.eq]: ispay\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// let tableName = req.session.userinfo.tableName\r\n\t\t\tlet tableName = req.session.userinfo === undefined ? jwt.decode(req.headers.token).tableName : req.session.userinfo.tableName\r\n\t\t\tif(tableName == 'yonghu') {\r\n\t\t\t\twhere.yonghuzhanghao = {\r\n\t\t\t\t\t[Op.eq]: req.session.userinfo === undefined ? jwt.decode(req.headers.token).username : req.session.userinfo.yonghuzhanghao\r\n\t\t\t\t}\r\n\t\t\t\tif (where['userid'] != undefined) {\r\n\t\t\t\t\tdelete where.userid\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet result = await JiaoyixinxiModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 分页接口（前端）\r\n\tapi.get('/list', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet wupinmingcheng = req.query.wupinmingcheng\r\n\t\t\tif (wupinmingcheng) {\r\n\r\n\t\t\t\tif (wupinmingcheng.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.wupinmingcheng = {\r\n\t\t\t\t\t\t[Op.like]: wupinmingcheng\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.wupinmingcheng = {\r\n\t\t\t\t\t\t[Op.eq]: wupinmingcheng\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet result = await JiaoyixinxiModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 401, '您的权限不够！', '', 200)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\t// 保存接口（后端）\r\n\tapi.post('/save', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\r\n\r\n\t\t\tconst userinfo = await JiaoyixinxiModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 保存接口（前端）\r\n\tapi.post('/add', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\t\t\tif (jwt.decode(req.headers.token) == null) {\r\n\t\t\t\ttoRes.session(res, 401, '请登录后再操作', '', 401)\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\tconst userinfo = await JiaoyixinxiModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 更新接口\r\n\tapi.post('/update', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\r\n\t\t\tawait JiaoyixinxiModel.update(req.body, {\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: req.body.id || 0\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\ttoRes.session(res, 0, '编辑成功！')\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 删除接口\r\n\tapi.post('/delete', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tawait JiaoyixinxiModel.destroy({\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: {\r\n\t\t\t\t\t[Op.in]: req.body\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.session(res, 0, '删除成功！')\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 详情接口（后端）\r\n\tapi.all('/info/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\t\t\ttoRes.record(res, 0, await JiaoyixinxiModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 详情接口（前端）\r\n\tapi.all('/detail/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\t\t\ttoRes.record(res, 0, await JiaoyixinxiModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 获取需要提醒的记录数接口\r\n\tapi.get('/remind/:columnName/:type', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = 'SELECT 0 AS count'\r\n\t\t\t\r\n\t\t\tif (req.params.type == 1) {\r\n\t\t\t\tif (req.query.remindstart) sql = \"SELECT COUNT(*) AS count FROM jiaoyixinxi WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"'\"\r\n\t\t\t\tif (req.query.remindend) sql = \"SELECT COUNT(*) AS count FROM jiaoyixinxi WHERE \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM jiaoyixinxi WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"' AND \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (req.params.type == 2) {\r\n\t\t\t\tif (req.query.remindstart) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM jiaoyixinxi WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"'\"\r\n\t\t\t\t}\r\n\t\t\t\tif (req.query.remindend) {\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM jiaoyixinxi WHERE \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM jiaoyixinxi WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"' AND \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst results = await sequelize.query(sql, {\r\n\t\t\t\tplain: true,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.count(res, 0, results.count)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t// 分组统计接口\r\n\tapi.get('/group/:columnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet columnName = req.params.columnName\r\n\t\t\t// let tableName = \"jiaoyixinxi\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tlet tableName = req.session.userinfo === undefined ? jwt.decode(req.headers.token).tableName : req.session.userinfo.tableName\r\n\t\t\tif(tableName == 'yonghu') {\r\n\t\t\t\twhere += \" AND yonghuzhanghao = '\" + jwt.decode(req.headers.token).username + \"' \";\r\n\t\t\t}\r\n\t\t\tsql = \"SELECT COUNT(*) AS total, \" + columnName + \" FROM jiaoyixinxi \" + where + \" GROUP BY \" + columnName + \" LIMIT 10\" \r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 统计指定字段\r\n\tapi.get('/value/:xColumnName/:yColumnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\t// let tableName = \"jiaoyixinxi\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tlet tableName = req.session.userinfo === undefined ? jwt.decode(req.headers.token).tableName : req.session.userinfo.tableName\r\n\t\t\tif(tableName == 'yonghu') {\r\n\t\t\t\twhere += \" AND yonghuzhanghao = '\" + jwt.decode(req.headers.token).username + \"' \";\r\n\t\t\t}\r\n\t\t\tif (\"jiaoyixinxi\" == \"orders\") {\r\n\t\t\t\twhere += \" AND status IN ('已支付', '已发货', '已完成') \";\r\n\t\t\t}\r\n\r\n\t\t\tsql = \"SELECT \" + xColumnName + \", SUM(\" + yColumnName + \") AS total FROM jiaoyixinxi \" + where + \" GROUP BY \" + xColumnName + \" DESC LIMIT 10\"\r\n\t\t\t\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 按日期统计\r\n\tapi.get('/value/:xColumnName/:yColumnName/:timeStatType', async (req, res) => {\r\n\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\tlet timeStatType = req.params.timeStatType\r\n\t\t\tlet tableName = \"jiaoyixinxi\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tif (jwt.decode(req.headers.token).role != '管理员') {\r\n\t\t\t\twhere += \" AND yonghuzhanghao = '\" + jwt.decode(req.headers.token).username + \"' \";\r\n\t\t\t}\r\n\t\t\tif (\"jiaoyixinxi\" == \"orders\") {\r\n\t\t\t\twhere += \" AND status IN ('已支付', '已发货', '已完成') \";\r\n\t\t\t}\r\n\r\n            if (config.dbConnection.dbtype.toLowerCase() == \"mysql\") {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m')  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y')  LIMIT 10\";\r\n            } else {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120)  LIMIT 10\";\r\n            }\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn api\r\n}\r\n"]}