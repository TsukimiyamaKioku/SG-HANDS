{"version":3,"sources":["../../src/api/Gongyijuanzeng.js"],"names":["config","db","api","get","req","res","page","parseInt","query","limit","sort","order","where","juanzengbianhao","indexOf","Op","like","eq","juanzengmingcheng","juanzengleixing","juanzengshuliang","juanzengmubiao","juanzengshijian","yonghuzhanghao","yonghuxingming","tableName","session","userinfo","undefined","jwt","decode","headers","token","username","userid","GongyijuanzengModel","findAndCountAll","offset","result","currPage","pageSize","toRes","post","Object","keys","body","forEach","item","create","update","id","destroy","in","all","findOne","params","record","sql","type","remindstart","columnName","remindend","remindStart","util","getDateTimeFormat","Number","remindEnd","sequelize","plain","raw","QueryTypes","SELECT","results","count","xColumnName","yColumnName","timeStatType","role","dbConnection","dbtype","toLowerCase"],"mappings":"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","file":"Gongyijuanzeng.js","sourcesContent":["import { version } from '../../package.json'\r\nimport { Router } from 'express'\r\nimport { Sequelize, Op, QueryTypes } from 'sequelize'\r\nimport sequelize from '../models/sequelize'\r\nimport toRes from '../lib/toRes'\r\nimport GongyijuanzengModel from '../models/GongyijuanzengModel'\r\nimport md5 from 'md5-node'\r\nimport util from '../lib/util'\r\nimport jwt from 'jsonwebtoken'\r\nimport moment from 'moment'\r\nimport ConfigModel from '../models/ConfigModel'\r\nimport https from 'https'\r\nimport request from 'request'\r\nimport qs from 'querystring'\r\nimport path from 'path'\r\nimport fs from 'fs'\r\n\r\n\r\n\r\n\r\nexport default ({ config, db }) => {\r\n\tlet api = Router()\r\n\r\n\r\n\t// 分页接口（后端）\r\n\tapi.get('/page', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet juanzengbianhao = req.query.juanzengbianhao\r\n\t\t\tif (juanzengbianhao) {\r\n\r\n\t\t\t\tif (juanzengbianhao.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.juanzengbianhao = {\r\n\t\t\t\t\t\t[Op.like]: juanzengbianhao\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.juanzengbianhao = {\r\n\t\t\t\t\t\t[Op.eq]: juanzengbianhao\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet juanzengmingcheng = req.query.juanzengmingcheng\r\n\t\t\tif (juanzengmingcheng) {\r\n\r\n\t\t\t\tif (juanzengmingcheng.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.juanzengmingcheng = {\r\n\t\t\t\t\t\t[Op.like]: juanzengmingcheng\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.juanzengmingcheng = {\r\n\t\t\t\t\t\t[Op.eq]: juanzengmingcheng\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet juanzengleixing = req.query.juanzengleixing\r\n\t\t\tif (juanzengleixing) {\r\n\r\n\t\t\t\tif (juanzengleixing.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.juanzengleixing = {\r\n\t\t\t\t\t\t[Op.like]: juanzengleixing\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.juanzengleixing = {\r\n\t\t\t\t\t\t[Op.eq]: juanzengleixing\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet juanzengshuliang = req.query.juanzengshuliang\r\n\t\t\tif (juanzengshuliang) {\r\n\r\n\t\t\t\tif (juanzengshuliang.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.juanzengshuliang = {\r\n\t\t\t\t\t\t[Op.like]: juanzengshuliang\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.juanzengshuliang = {\r\n\t\t\t\t\t\t[Op.eq]: juanzengshuliang\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet juanzengmubiao = req.query.juanzengmubiao\r\n\t\t\tif (juanzengmubiao) {\r\n\r\n\t\t\t\tif (juanzengmubiao.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.juanzengmubiao = {\r\n\t\t\t\t\t\t[Op.like]: juanzengmubiao\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.juanzengmubiao = {\r\n\t\t\t\t\t\t[Op.eq]: juanzengmubiao\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet juanzengshijian = req.query.juanzengshijian\r\n\t\t\tif (juanzengshijian) {\r\n\r\n\t\t\t\tif (juanzengshijian.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.juanzengshijian = {\r\n\t\t\t\t\t\t[Op.like]: juanzengshijian\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.juanzengshijian = {\r\n\t\t\t\t\t\t[Op.eq]: juanzengshijian\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet yonghuzhanghao = req.query.yonghuzhanghao\r\n\t\t\tif (yonghuzhanghao) {\r\n\r\n\t\t\t\tif (yonghuzhanghao.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.yonghuzhanghao = {\r\n\t\t\t\t\t\t[Op.like]: yonghuzhanghao\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.yonghuzhanghao = {\r\n\t\t\t\t\t\t[Op.eq]: yonghuzhanghao\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet yonghuxingming = req.query.yonghuxingming\r\n\t\t\tif (yonghuxingming) {\r\n\r\n\t\t\t\tif (yonghuxingming.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.yonghuxingming = {\r\n\t\t\t\t\t\t[Op.like]: yonghuxingming\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.yonghuxingming = {\r\n\t\t\t\t\t\t[Op.eq]: yonghuxingming\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// let tableName = req.session.userinfo.tableName\r\n\t\t\tlet tableName = req.session.userinfo === undefined ? jwt.decode(req.headers.token).tableName : req.session.userinfo.tableName\r\n\t\t\tif(tableName == 'yonghu') {\r\n\t\t\t\twhere.yonghuzhanghao = {\r\n\t\t\t\t\t[Op.eq]: req.session.userinfo === undefined ? jwt.decode(req.headers.token).username : req.session.userinfo.yonghuzhanghao\r\n\t\t\t\t}\r\n\t\t\t\tif (where['userid'] != undefined) {\r\n\t\t\t\t\tdelete where.userid\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet result = await GongyijuanzengModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 分页接口（前端）\r\n\tapi.get('/list', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet page = parseInt(req.query.page) || 1\r\n\t\t\tlet limit = parseInt(req.query.limit) || 10\r\n\t\t\tlet sort = req.query.sort || 'id'\r\n\t\t\tlet order = req.query.order || 'asc'\r\n\r\n\t\t\tlet where = {}\r\n\t\t\tlet juanzengmingcheng = req.query.juanzengmingcheng\r\n\t\t\tif (juanzengmingcheng) {\r\n\r\n\t\t\t\tif (juanzengmingcheng.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.juanzengmingcheng = {\r\n\t\t\t\t\t\t[Op.like]: juanzengmingcheng\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.juanzengmingcheng = {\r\n\t\t\t\t\t\t[Op.eq]: juanzengmingcheng\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet juanzengleixing = req.query.juanzengleixing\r\n\t\t\tif (juanzengleixing) {\r\n\r\n\t\t\t\tif (juanzengleixing.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.juanzengleixing = {\r\n\t\t\t\t\t\t[Op.like]: juanzengleixing\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.juanzengleixing = {\r\n\t\t\t\t\t\t[Op.eq]: juanzengleixing\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet juanzengmubiao = req.query.juanzengmubiao\r\n\t\t\tif (juanzengmubiao) {\r\n\r\n\t\t\t\tif (juanzengmubiao.indexOf('%') != -1) {\r\n\t\t\t\t\twhere.juanzengmubiao = {\r\n\t\t\t\t\t\t[Op.like]: juanzengmubiao\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhere.juanzengmubiao = {\r\n\t\t\t\t\t\t[Op.eq]: juanzengmubiao\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet result = await GongyijuanzengModel.findAndCountAll({\r\n\t\t\t\torder: [[sort, order]],\r\n\t\t\t\twhere,\r\n\t\t\t\toffset: (page - 1) * limit,\r\n\t\t\t\tlimit\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tresult.currPage = page\r\n\t\t\tresult.pageSize = limit\r\n\r\n\t\t\ttoRes.page(res, 0, result)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 401, '您的权限不够！', '', 200)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\t// 保存接口（后端）\r\n\tapi.post('/save', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\r\n\r\n\t\t\tconst userinfo = await GongyijuanzengModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 保存接口（前端）\r\n\tapi.post('/add', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tObject.keys(req.body).forEach(item=>{\r\n\t\t\t\tif(req.body[item] == '')  delete req.body[item]\r\n\t\t\t})\r\n\r\n\t\t\tif (jwt.decode(req.headers.token) == null) {\r\n\t\t\t\ttoRes.session(res, 401, '请登录后再操作', '', 401)\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\tconst userinfo = await GongyijuanzengModel.create(req.body)\r\n\r\n\t\t\tif (userinfo === null) {\r\n\r\n\t\t\t\ttoRes.session(res, -1, '添加失败！')\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttoRes.session(res, 0, '添加成功！')\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 更新接口\r\n\tapi.post('/update', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\r\n\t\t\tawait GongyijuanzengModel.update(req.body, {\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: req.body.id || 0\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\ttoRes.session(res, 0, '编辑成功！')\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 删除接口\r\n\tapi.post('/delete', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tawait GongyijuanzengModel.destroy({\r\n\t\t\t\twhere: {\r\n\t\t\t\t  id: {\r\n\t\t\t\t\t[Op.in]: req.body\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.session(res, 0, '删除成功！')\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 详情接口（后端）\r\n\tapi.all('/info/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\t\t\ttoRes.record(res, 0, await GongyijuanzengModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n    // 详情接口（前端）\r\n\tapi.all('/detail/:id', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\r\n\t\t\ttoRes.record(res, 0, await GongyijuanzengModel.findOne({ where: { id: req.params.id } }))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 获取需要提醒的记录数接口\r\n\tapi.get('/remind/:columnName/:type', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = 'SELECT 0 AS count'\r\n\t\t\t\r\n\t\t\tif (req.params.type == 1) {\r\n\t\t\t\tif (req.query.remindstart) sql = \"SELECT COUNT(*) AS count FROM gongyijuanzeng WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"'\"\r\n\t\t\t\tif (req.query.remindend) sql = \"SELECT COUNT(*) AS count FROM gongyijuanzeng WHERE \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM gongyijuanzeng WHERE \" + req.params.columnName + \" >= '\" + req.query.remindstart + \"' AND \" + req.params.columnName + \" <= '\" + req.query.remindend + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (req.params.type == 2) {\r\n\t\t\t\tif (req.query.remindstart) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM gongyijuanzeng WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"'\"\r\n\t\t\t\t}\r\n\t\t\t\tif (req.query.remindend) {\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM gongyijuanzeng WHERE \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (req.query.remindstart && req.query.remindend) {\r\n\t\t\t\t\tlet remindStart = util.getDateTimeFormat(0 + Number(req.query.remindstart), \"yyyy-MM-dd\")\r\n\t\t\t\t\tlet remindEnd = util.getDateTimeFormat(req.query.remindend, \"yyyy-MM-dd\")\r\n\t\t\t\t\tsql = \"SELECT COUNT(*) AS count FROM gongyijuanzeng WHERE \" + req.params.columnName + \" >= '\" + remindStart + \"' AND \" + req.params.columnName + \" <= '\" + remindEnd + \"'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst results = await sequelize.query(sql, {\r\n\t\t\t\tplain: true,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t})\r\n\r\n\t\t\ttoRes.count(res, 0, results.count)\r\n\t\t} catch(err) {\r\n\t\t\t\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t// 分组统计接口\r\n\tapi.get('/group/:columnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet columnName = req.params.columnName\r\n\t\t\t// let tableName = \"gongyijuanzeng\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tlet tableName = req.session.userinfo === undefined ? jwt.decode(req.headers.token).tableName : req.session.userinfo.tableName\r\n\t\t\tif(tableName == 'yonghu') {\r\n\t\t\t\twhere += \" AND yonghuzhanghao = '\" + jwt.decode(req.headers.token).username + \"' \";\r\n\t\t\t}\r\n\t\t\tsql = \"SELECT COUNT(*) AS total, \" + columnName + \" FROM gongyijuanzeng \" + where + \" GROUP BY \" + columnName + \" LIMIT 10\" \r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 统计指定字段\r\n\tapi.get('/value/:xColumnName/:yColumnName', async (req, res) => {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\t// let tableName = \"gongyijuanzeng\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tlet tableName = req.session.userinfo === undefined ? jwt.decode(req.headers.token).tableName : req.session.userinfo.tableName\r\n\t\t\tif(tableName == 'yonghu') {\r\n\t\t\t\twhere += \" AND yonghuzhanghao = '\" + jwt.decode(req.headers.token).username + \"' \";\r\n\t\t\t}\r\n\t\t\tif (\"gongyijuanzeng\" == \"orders\") {\r\n\t\t\t\twhere += \" AND status IN ('已支付', '已发货', '已完成') \";\r\n\t\t\t}\r\n\r\n\t\t\tsql = \"SELECT \" + xColumnName + \", SUM(\" + yColumnName + \") AS total FROM gongyijuanzeng \" + where + \" GROUP BY \" + xColumnName + \" DESC LIMIT 10\"\r\n\t\t\t\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\t// 按日期统计\r\n\tapi.get('/value/:xColumnName/:yColumnName/:timeStatType', async (req, res) => {\r\n\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tlet sql = \"\"\r\n\t\t\tlet xColumnName = req.params.xColumnName\r\n\t\t\tlet yColumnName = req.params.yColumnName\r\n\t\t\tlet timeStatType = req.params.timeStatType\r\n\t\t\tlet tableName = \"gongyijuanzeng\"\r\n\t\t\tlet where = \" WHERE 1 = 1 \"\r\n\t\t\tif (jwt.decode(req.headers.token).role != '管理员') {\r\n\t\t\t\twhere += \" AND yonghuzhanghao = '\" + jwt.decode(req.headers.token).username + \"' \";\r\n\t\t\t}\r\n\t\t\tif (\"gongyijuanzeng\" == \"orders\") {\r\n\t\t\t\twhere += \" AND status IN ('已支付', '已发货', '已完成') \";\r\n\t\t\t}\r\n\r\n            if (config.dbConnection.dbtype.toLowerCase() == \"mysql\") {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m-%d') LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y-%m') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y-%m')  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(\" + xColumnName + \", '%Y') \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(\" + xColumnName + \", '%Y')  LIMIT 10\";\r\n            } else {\r\n                if (timeStatType == \"日\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(10),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"月\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(7),\" + xColumnName + \", 120)  LIMIT 10\";\r\n                if (timeStatType == \"年\")\r\n                    sql = \"SELECT DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120) \" + xColumnName + \", sum(\" + yColumnName + \") total FROM \" + tableName + where + \" GROUP BY DATE_FORMAT(VARCHAR(4),\" + xColumnName + \", 120)  LIMIT 10\";\r\n            }\r\n\t\t\ttoRes.record(res, 0, await sequelize.query(sql, {\r\n\t\t\t\tplain: false,\r\n\t\t\t\traw: true,\r\n\t\t\t\ttype: QueryTypes.SELECT\r\n\t\t\t}))\r\n\t\t} catch(err) {\r\n\r\n\t\t\ttoRes.session(res, 500, '服务器错误！', '', 500)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn api\r\n}\r\n"]}